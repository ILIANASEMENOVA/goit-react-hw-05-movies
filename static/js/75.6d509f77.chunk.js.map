{"version":3,"file":"static/js/75.6d509f77.chunk.js","mappings":"wNAGaA,EAAOC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oCAIhBC,EAAOH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2EAMhBG,GAAYL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,gG,SCOrC,EAhBmB,SAAHM,GAAmB,IAAbC,EAAKD,EAALC,MACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACb,EAAI,CAAAc,SACFJ,EAAMK,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAIH,EAAJG,KAAI,OAC3BN,EAAAA,EAAAA,KAACT,EAAI,CAAAU,UACHD,EAAAA,EAAAA,KAACP,EAAS,CAACc,GAAE,WAAAC,OAAaJ,GAAMK,MAAO,CAAEC,KAAMZ,GAAWG,SACvDI,GAASC,KAFHF,EAIJ,KAIf,C,gHCkBA,UA/Ba,WACX,IAAAO,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAmBtB,OAjBAG,EAAAA,EAAAA,YAAU,WACgB,SAAAC,IAWvB,OAXuBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGoB,OAHpBF,EAAAC,KAAA,EAEIZ,GAAa,GACbI,GAAS,GAAOO,EAAAE,KAAA,GACYC,EAAAA,EAAAA,MAAc,KAAD,EAAnCJ,EAAaC,EAAAI,KACnBnB,EAAUc,GAAeC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEzBP,GAAS,GAAM,QAEK,OAFLO,EAAAC,KAAA,GAEfZ,GAAa,GAAOW,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAT,EAAA,yBAEvBU,MAAA,KAAAC,UAAA,EAZc,WACSd,EAAAa,MAAC,KAADC,UAAA,CAaxBC,EACF,GAAG,KAGDC,EAAAA,EAAAA,MAAA,OAAAzC,SAAA,CACGkB,IAAanB,EAAAA,EAAAA,KAAC2C,EAAAA,EAAM,IACpBpB,IAASmB,EAAAA,EAAAA,MAAA,KAAAzC,SAAA,CAAG,SAAOsB,EAAMqB,WACzB7B,EAAO8B,OAAS,IAAK7C,EAAAA,EAAAA,KAAC8C,EAAAA,EAAU,CAACjD,MAAOkB,MAG/C,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.js","pages/Home/Home.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n\n  &:hover {\n    color: #ff69b4;\n  }\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { List, Item, MovieLink } from './MoviesList.styled';\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {items.map(({ id, title, name }) => (\n        <Item key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            {title || name}\n          </MovieLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport React, { useEffect, useState } from 'react';\nimport { fetchMovies } from 'services/moviesApi';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const initialMovies = await fetchMovies();\n        setMovies(initialMovies);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getMovies();\n  }, []);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <p>error {error.message}</p>}\n      {movies.length > 0 && <MoviesList items={movies} />}\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","MovieLink","Link","_templateObject3","_ref","items","location","useLocation","_jsx","children","map","_ref2","id","title","name","to","concat","state","from","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","_getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","initialMovies","_context","prev","next","fetchMovies","sent","t0","finish","stop","apply","arguments","getMovies","_jsxs","Loader","message","length","MoviesList"],"sourceRoot":""}